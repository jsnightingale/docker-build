#!/bin/bash

set -e

export APP_PORT=${APP_PORT:-80}
export APP_ENV=${APP_ENV:-local}
export DB_PORT=${DB_PORT:-3306}
export DB_ROOT_PASS=${DB_ROOT_PASS:-root}
export DB_NAME=${DB_NAME:-arena}
export DB_USER=${DB_USER:-arena}
export DB_PASS=${DB_PASS:-root}

HTTPSREGEX="^https?://"

if [ -d "site" ]; then
    rm -rf site
fi

echo -n "Enter the url of the git repsoitory you would like to clone: "
read REPOSITORY
if [[ $REPOSITORY =~ $HTTPSREGEX ]]; then

    git clone $REPOSITORY site
else 
    echo "We didn't like that input. Exiting..."
    exit 1
fi

mkdir site/bootstrap/cache
mkdit site/storage/framework
mkdir site/storage/framework/sessions
mkdir site/storage/framework/view
mkdir site/storage/framework/cache

echo "Creating a env file..."
  	cat >> site/.env <<EOL
#################################################
# APP ENVIRONMENT SETTINGS
#################################################
APP_ENV=local
APP_DEBUG=true
APP_TIMEZONE=Australia/Sydney
APP_KEY=
APP_URL=http://arena.test
APP_COUNTRY=AU
APP_CURRENCY=AUD

#################################################
# DB Settings
#################################################
DB_DATABASE=arena
DB_USERNAME=root
DB_PASSWORD=root
DB_HOST=mysql
DB_PORT=3306

COREDB_DATABASE=coredb
COREDB_USERNAME=root
COREDB_PASSWORD=root
COREDB_HOST=mysql
COREDB_PORT=3306

VOIPDB1_DATABASE=coredb
VOIPDB1_USERNAME=root
VOIPDB1_PASSWORD=root
VOIPDB1_HOST=mysql
VOIPDB1_PORT=3306

#################################################
# Drivers
#################################################
CACHE_DRIVER=redis
SESSION_DRIVER=redis
QUEUE_DRIVER=redis
BROADCAST_DRIVER=log
LOG_CHANNEL=single

REDIS_HOST=redis
REDIS_PASSWORD=null
REDIS_PORT=6379
EOL

./develop composer install

sleep 5

./develop art key:generate

 sleep 5

./develop npm install

sleep 5

./develop npm run dev

# echo Starting mysql and nginx...
./develop up -d app mysql scheduler redis proxy

sleep 5

until ./develop exec mysql mysql -h 127.0.0.1 -u $DB_USER -p$DB_PASS -D $DB_NAME --silent -e "show databases;"
do
  echo "Waiting for database connection..."
  sleep 5
done

echo "Successfully connected to the database..."

echo -n "Do you want to run migrations? (Y/N) "
read MIGRATIONS
if [[ $MIGRATIONS = 'Y' ]]; then

    if [ $DB_PASS = 'root' ];
    then
        echo Database Migration Started!
       
        ./develop art migrate --path="database/migrations/db-calldetails";
        ./develop art migrate --path="database/migrations/db-coredb";
        ./develop art migrate --path="database/migrations/db-arena";
        echo Database Migration Finished!

        sleep 5

        echo Database Seeding Started!
        ./develop art db:seed --class=ConfigSeeder;
        ./develop art db:seed --class=WhiteLabelSeeder;
        ./develop art db:seed --class=CustomerSeeder;
        ./develop art db:seed --class=CallingPlanSeeder;
        ./develop art db:seed --class=NumberClassSeeder;
        ./develop art db:seed --class=LineNumberAvailableDatabaseSeeder;
        ./develop art db:seed --class=DeviceProvisionSeeder;
        ./develop art db:seed --class=CallDetailsToBillDatabaseSeeder;
        ./develop art db:seed --class=UserSeeder;
        echo Database Seeding Completed!
    fi

fi

echo Starting queue...
./develop up -d queue

echo Installation Complete!